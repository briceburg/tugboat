// Generated by CoffeeScript 1.8.0
var containerdiff, identifyprimary, servicediff;

containerdiff = require('./containerdiff');

identifyprimary = function(service, imagerepo) {
  var c, difference, image, result, tagname, _i, _len, _ref;
  tagname = service.service.params.Image;
  if (tagname.indexOf(':') === -1) {
    tagname += ':latest';
  }
  if (imagerepo.tags[tagname] == null) {
    return {
      messages: ["Image '" + service.service.params.Image + "' not found"],
      error: service.containers,
      iserror: true,
      keep: [],
      migrate: [],
      cull: []
    };
  }
  image = imagerepo.tags[tagname];
  result = {
    messages: [],
    error: [],
    iserror: false,
    keep: [],
    migrate: [],
    cull: []
  };
  _ref = service.containers;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    c = _ref[_i];
    if (result.keep.length !== 0) {
      result.cull.push(c);
      continue;
    }
    difference = containerdiff(c, service, image);
    if (difference == null) {
      result.keep.push(c);
    } else {
      result.messages.push(difference);
      result.migrate.push(c);
    }
  }
  return result;
};

servicediff = function(group, service, imagerepo) {
  var result;
  if (!service.isknown) {
    return {
      messages: ['Unknown service.'],
      error: [],
      iserror: false,
      keep: [],
      migrate: [],
      cull: service.containers,
      create: 0
    };
  }
  result = identifyprimary(service, imagerepo);
  result.create = 0;
  if (!result.iserror) {
    while (result.create + result.keep.length + result.migrate.length < 1) {
      result.create++;
    }
  }
  return result;
};

module.exports = function(imagerepo, groups) {
  var g, s, _, _ref;
  for (_ in groups) {
    g = groups[_];
    _ref = g.services;
    for (_ in _ref) {
      s = _ref[_];
      s.diff = servicediff(g, s, imagerepo);
    }
  }
  return groups;
};
