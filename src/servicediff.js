// Generated by CoffeeScript 1.8.0
var identifyprimary, servicediff;

identifyprimary = function(service) {
  return {
    keep: [],
    discard: service.containers
  };
};

servicediff = function(group, service) {
  var d, discard, k, keep, result, _i, _j, _len, _len1, _ref;
  if (!service.isknown) {
    return {
      stop: [],
      rm: [],
      start: service.containers.filter(function(c) {
        return !c.inspect.State.Running;
      }),
      create: false
    };
  }
  _ref = identifyprimary(service), keep = _ref.keep, discard = _ref.discard;
  result = {
    stop: [],
    rm: [],
    start: [],
    create: 0
  };
  for (_i = 0, _len = keep.length; _i < _len; _i++) {
    k = keep[_i];
    if (!k.inspect.State.Running) {
      result.start.push(k);
    }
  }
  for (_j = 0, _len1 = discard.length; _j < _len1; _j++) {
    d = discard[_j];
    if (d.inspect.State.Running) {
      result.stop.push(d);
    }
    result.rm.push(d);
  }
  while (result.create + keep.length < 1) {
    result.create++;
  }
  console.log(group.name);
  console.log("  stop: " + result.stop.length);
  console.log("  rm: " + result.rm.length);
  console.log("  start: " + result.start.length);
  console.log("  create: " + result.create);
  return result;
};

module.exports = function(groups) {
  var g, s, _, _ref;
  for (_ in groups) {
    g = groups[_];
    _ref = g.services;
    for (_ in _ref) {
      s = _ref[_];
      s.diff = servicediff(g, s);
    }
  }
  return groups;
};
