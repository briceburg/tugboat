// Generated by CoffeeScript 1.8.0
var ess, init_errors;

init_errors = require('./errors');

ess = function(num, s, p) {
  if (num === 1) {
    return s;
  } else {
    return p;
  }
};

module.exports = function(tugboat) {
  return tugboat.init(function(errors) {
    var count;
    if (errors != null) {
      return init_errors(errors);
    }
    count = Object.keys(tugboat._groups).length;
    console.log();
    if (count === 0) {
      console.log('  There are no groups defined in this directory'.magenta);
    } else {
      console.log("  There are " + (count.toString().green) + " group " + (ess(count, 'definition', 'definitions')) + " in this directory");
    }
    return tugboat.ducke.ping(function(err, isUp) {
      if ((err != null) || !isUp) {
        console.error();
        console.error('  docker is down'.red);
        console.error();
        return process.exit(1);
      } else {
        return tugboat.ducke.ps(function(err, results) {
          var running, stopped;
          if ((err != null) || results.length === 0) {
            console.error();
            console.error('  There are no docker containers on this system'.magenta);
            console.error();
          } else {
            running = results.filter(function(d) {
              return d.inspect.State.Running;
            }).length;
            stopped = results.length - running;
            console.error();
            console.error("  There " + (ess(running, 'is', 'are')) + " " + (running.toString().green) + " running container" + (ess(running, '', 's')) + " and " + (stopped.toString().red) + " stopped container" + (ess(stopped, '', 's')));
            console.error();
          }
          return process.exit(1);
        });
      }
    });
  });
};
