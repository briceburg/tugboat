// Generated by CoffeeScript 1.8.0
var init_errors, seq;

seq = require('../src/seq');

init_errors = require('./errors');

module.exports = function(tugboat, groupname, servicenames) {
  return tugboat.init(function(errors) {
    if (errors != null) {
      return init_errors(errors);
    }
    return tugboat.diff(function(err, results) {
      var group, outputname, service, _, _fn, _ref;
      if (err != null) {
        if (err.stack) {
          console.error(err.stack);
        } else {
          console.error(err);
        }
        return;
      }
      groupname = groupname.replace('.yml', '');
      console.log();
      console.log("  Updating " + groupname.blue + "...");
      console.log();
      group = results[groupname];
      _ref = group.services;
      _fn = function(outputname, service) {
        var c, i, newindex, newname, _fn1, _fn2, _fn3, _fn4, _i, _j, _k, _l, _len, _len1, _len2, _len3, _m, _ref1, _ref2, _ref3, _ref4, _ref5, _results;
        seq("" + outputname + " Diffing", function(cb) {
          var m, _i, _len, _ref1;
          if (service.diff.iserror) {
            return cb(service.diff.messages);
          }
          _ref1 = service.diff.messages;
          for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
            m = _ref1[_i];
            console.log("  " + m.magenta);
          }
          return cb();
        });
        _ref1 = service.diff.stop;
        _fn1 = function(c) {
          return seq("" + outputname + " Stopping " + (c.container.Names[0].substr('1').cyan), function(cb) {
            return tugboat.stop(group, service, c, function(err, result) {
              if (err != null) {
                return cb(err);
              }
              return cb();
            });
          });
        };
        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
          c = _ref1[_i];
          _fn1(c);
        }
        _ref2 = service.diff.rm;
        _fn2 = function(c) {
          return seq("" + outputname + " Deleting " + (c.container.Names[0].substr('1').cyan), function(cb) {
            return tugboat.rm(group, service, c, function(err, result) {
              if (err != null) {
                return cb(err);
              }
              return cb();
            });
          });
        };
        for (_j = 0, _len1 = _ref2.length; _j < _len1; _j++) {
          c = _ref2[_j];
          _fn2(c);
        }
        _ref3 = service.diff.start;
        _fn3 = function(c) {
          return seq("" + outputname + " Starting " + (c.container.Names[0].substr('1').cyan), function(cb) {
            return tugboat.start(group, service, c, function(err, result) {
              if (err != null) {
                return cb(err);
              }
              return cb();
            });
          });
        };
        for (_k = 0, _len2 = _ref3.length; _k < _len2; _k++) {
          c = _ref3[_k];
          _fn3(c);
        }
        _ref4 = service.diff.keep;
        _fn4 = function(c) {
          return seq("" + outputname + " Keeping " + (c.container.Names[0].substr('1').cyan), function(cb) {
            return cb();
          });
        };
        for (_l = 0, _len3 = _ref4.length; _l < _len3; _l++) {
          c = _ref4[_l];
          _fn4(c);
        }
        if (service.diff.create > 0) {
          _results = [];
          for (i = _m = 1, _ref5 = service.diff.create; 1 <= _ref5 ? _m <= _ref5 : _m >= _ref5; i = 1 <= _ref5 ? ++_m : --_m) {
            newname = "" + groupname + "_" + service.name;
            newindex = 1;
            while (service.containers.filter(function(c) {
                return c.index === newindex.toString();
              }).length !== 0) {
              newindex++;
            }
            newname += "_" + newindex;
            _results.push(seq("" + outputname + " Creating " + newname.cyan + " (" + service.service.params.Image + ")", function(cb) {
              return tugboat.up(group, service, newname, function(err) {
                if (err != null) {
                  return cb(err);
                }
                return cb();
              });
            }));
          }
          return _results;
        }
      };
      for (_ in _ref) {
        service = _ref[_];
        outputname = service.name.cyan;
        while (outputname.length < 36) {
          outputname += ' ';
        }
        _fn(outputname, service);
      }
      return seq(function(cb) {
        console.log();
        return cb();
      });
    });
  });
};
